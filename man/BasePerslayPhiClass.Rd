% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perslay.R
\name{BasePerslayPhiClass}
\alias{BasePerslayPhiClass}
\title{Perslay: Base Perslay Phi Class}
\description{
Perslay: Base Perslay Phi Class

Perslay: Base Perslay Phi Class
}
\keyword{internal}
\section{Super classes}{
\code{rgudhi::PythonClass} -> \code{\link[rgudhi:PerslayBaseClass]{rgudhi::PerslayBaseClass}} -> \code{BasePerslayPhiClass}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BasePerslayPhiClass-call}{\code{BasePerslayPhiClass$call()}}
\item \href{#method-BasePerslayPhiClass-clone}{\code{BasePerslayPhiClass$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rgudhi" data-topic="PythonClass" data-id="get_python_class"><a href='../../rgudhi/html/PythonClass.html#method-PythonClass-get_python_class'><code>rgudhi::PythonClass$get_python_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rgudhi" data-topic="PythonClass" data-id="set_python_class"><a href='../../rgudhi/html/PythonClass.html#method-PythonClass-set_python_class'><code>rgudhi::PythonClass$set_python_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rgudhi" data-topic="PerslayBaseClass" data-id="build"><a href='../../rgudhi/html/PerslayBaseClass.html#method-PerslayBaseClass-build'><code>rgudhi::PerslayBaseClass$build()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BasePerslayPhiClass-call"></a>}}
\if{latex}{\out{\hypertarget{method-BasePerslayPhiClass-call}{}}}
\subsection{Method \code{call()}}{
Apply the layer to an input, or list of inputs, and return
the result.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BasePerslayPhiClass$call(diagrams)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{diagrams}}{A ragged tensor of shape \eqn{n \times \mathrm{None} \times 2} specifying
a sample of \eqn{n} persistence diagrams. The second dimension is ragged
because the number of points in each diagram may vary.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A ragged tensor storing the evaluations on the 1D grid of the 1D
phi functions corresponding to the persistence diagram points. The
second dimension is ragged since persistence diagrams can have
different numbers of points.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BasePerslayPhiClass-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BasePerslayPhiClass-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BasePerslayPhiClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
