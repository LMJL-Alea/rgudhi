% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sklearn-scalers.R
\name{MaxAbsScaler}
\alias{MaxAbsScaler}
\title{Scales each feature by its maximum absolute value}
\description{
This estimator scales and translates each feature individually such that the
maximal absolute value of each feature in the training set will be 1.0. It
does not shift/center the data, and thus does not destroy any sparsity.

This scaler can also be applied to sparse CSR or CSC matrices.
}
\examples{

## ------------------------------------------------
## Method `MaxAbsScaler$new`
## ------------------------------------------------

if (reticulate::py_module_available("sklearn.preprocessing")) {
  mas <- MaxAbsScaler$new()
}
}
\section{Super class}{
\code{rgudhi::PythonClass} -> \code{MaxAbsScaler}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MaxAbsScaler-new}{\code{MaxAbsScaler$new()}}
\item \href{#method-MaxAbsScaler-clone}{\code{MaxAbsScaler$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rgudhi" data-topic="PythonClass" data-id="get_python_class"><a href='../../rgudhi/html/PythonClass.html#method-PythonClass-get_python_class'><code>rgudhi::PythonClass$get_python_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rgudhi" data-topic="PythonClass" data-id="set_python_class"><a href='../../rgudhi/html/PythonClass.html#method-PythonClass-set_python_class'><code>rgudhi::PythonClass$set_python_class()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MaxAbsScaler-new"></a>}}
\if{latex}{\out{\hypertarget{method-MaxAbsScaler-new}{}}}
\subsection{Method \code{new()}}{
The \link{MaxAbsScaler} class constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaxAbsScaler$new(copy = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{copy}}{A boolean value specifying whether to perform in-place
scaling and avoid a copy (if the input is already a numpy array).
Defaults to \code{TRUE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object of class \link{MaxAbsScaler}.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (reticulate::py_module_available("sklearn.preprocessing")) {
  mas <- MaxAbsScaler$new()
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MaxAbsScaler-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MaxAbsScaler-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaxAbsScaler$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
