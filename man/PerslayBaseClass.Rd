% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perslay.R
\name{PerslayBaseClass}
\alias{PerslayBaseClass}
\title{Perslay: Base Class}
\description{
Perslay: Base Class

Perslay: Base Class
}
\keyword{internal}
\section{Super class}{
\code{rgudhi::PythonClass} -> \code{PerslayBaseClass}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PerslayBaseClass-build}{\code{PerslayBaseClass$build()}}
\item \href{#method-PerslayBaseClass-call}{\code{PerslayBaseClass$call()}}
\item \href{#method-PerslayBaseClass-clone}{\code{PerslayBaseClass$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rgudhi" data-topic="PythonClass" data-id="get_python_class"><a href='../../rgudhi/html/PythonClass.html#method-PythonClass-get_python_class'><code>rgudhi::PythonClass$get_python_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rgudhi" data-topic="PythonClass" data-id="set_python_class"><a href='../../rgudhi/html/PythonClass.html#method-PythonClass-set_python_class'><code>rgudhi::PythonClass$set_python_class()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PerslayBaseClass-build"></a>}}
\if{latex}{\out{\hypertarget{method-PerslayBaseClass-build}{}}}
\subsection{Method \code{build()}}{
Creates the variables of the layer (optional, for subclass
implementers).

This is a method that implementers of subclasses of \code{Layer} or \code{Model}
can override if they need a state-creation step in-between layer
instantiation and layer call. It is invoked automatically before the
first execution of \code{call()}.

This is typically used to create the weights of \code{Layer} subclasses (at
the discretion of the subclass implementer).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PerslayBaseClass$build(input_shape)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_shape}}{Instance of \code{TensorShape}, or list of instances of
\code{TensorShape} if the layer expects a list of inputs (one instance per
input).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The class itself invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PerslayBaseClass-call"></a>}}
\if{latex}{\out{\hypertarget{method-PerslayBaseClass-call}{}}}
\subsection{Method \code{call()}}{
Apply the layer to an input, or list of inputs, and return
the result.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PerslayBaseClass$call(diagrams)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{diagrams}}{A ragged tensor of shape \eqn{n \times \mathrm{None} \times 2} specifying
a sample of \eqn{n} persistence diagrams. The second dimension is ragged
because the number of points in each diagram may vary.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Either a ragged tensor or a tensor storing the result of the
layer.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PerslayBaseClass-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PerslayBaseClass-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PerslayBaseClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
