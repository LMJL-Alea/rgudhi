% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perslay.R
\name{TentPerslayPhi}
\alias{TentPerslayPhi}
\title{Perslay: Tent Perslay Phi Class}
\description{
This is a class for computing a transformation function for
persistence diagram points. This function turns persistence diagram points
into 1D tent functions (linearly increasing on the first half of the bar
corresponding to the point from zero to half of the bar length, linearly
decreasing on the second half and zero elsewhere) centered on the points,
that are then evaluated on a regular 1D grid.
}
\examples{
\dontshow{if (reticulate::py_module_available("gudhi")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
diagrams <- as_persistence_diagram_sample(list(
  as_persistence_diagram(tibble::tibble(
    birth = c(0, 1, 3, 6),
    death = c(4, 2, 8, 8)
  ))
))
ds <- DiagramScaler$new(
  use = TRUE,
  scalers = list(list(c(0, 1), MinMaxScaler$new()))
)
dgms <- diagrams |>
  ds$fit_transform() |>
  to_ragged_tensor()

phi <- TentPerslayPhi$new(
  samples = c(1:13, 12:1)
)
phi$call(dgms)
\dontshow{\}) # examplesIf}
}
\author{
Mathieu CarriÃ¨re, Martin Royer, Gard Spreemann, Wojciech Reise
}
\section{Super classes}{
\code{rgudhi::PythonClass} -> \code{\link[rgudhi:PerslayBaseClass]{rgudhi::PerslayBaseClass}} -> \code{\link[rgudhi:BasePerslayPhiClass]{rgudhi::BasePerslayPhiClass}} -> \code{TentPerslayPhi}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TentPerslayPhi-new}{\code{TentPerslayPhi$new()}}
\item \href{#method-TentPerslayPhi-clone}{\code{TentPerslayPhi$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rgudhi" data-topic="PythonClass" data-id="get_python_class"><a href='../../rgudhi/html/PythonClass.html#method-PythonClass-get_python_class'><code>rgudhi::PythonClass$get_python_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rgudhi" data-topic="PythonClass" data-id="set_python_class"><a href='../../rgudhi/html/PythonClass.html#method-PythonClass-set_python_class'><code>rgudhi::PythonClass$set_python_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rgudhi" data-topic="PerslayBaseClass" data-id="build"><a href='../../rgudhi/html/PerslayBaseClass.html#method-PerslayBaseClass-build'><code>rgudhi::PerslayBaseClass$build()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rgudhi" data-topic="BasePerslayPhiClass" data-id="call"><a href='../../rgudhi/html/BasePerslayPhiClass.html#method-BasePerslayPhiClass-call'><code>rgudhi::BasePerslayPhiClass$call()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TentPerslayPhi-new"></a>}}
\if{latex}{\out{\hypertarget{method-TentPerslayPhi-new}{}}}
\subsection{Method \code{new()}}{
The \code{\link{TentPerslayPhi}} constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TentPerslayPhi$new(samples, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{samples}}{A numeric vector specifying the grid elements on which to evaluate the phi
function.}

\item{\code{...}}{A named list providing extra arguments for compatibility with the TensorFlow
API. Not used here.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object of class \code{\link{TentPerslayPhi}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TentPerslayPhi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TentPerslayPhi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TentPerslayPhi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
